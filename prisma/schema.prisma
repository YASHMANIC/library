// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  verified  Boolean  @default(false)
  createdAt DateTime
}

model VerficationToken {
  id      String   @id @default(uuid())
  email   String   @unique
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Course {
  id          String  @id @default(uuid())
  email       String?
  title       String  @db.Text
  description String? @db.Text
  imageUrl    String? @db.Text
  isPublished Boolean @default(false)

  categoryId  String?
  category    Category?    @relation(fields: [categoryId], references: [id])
  chapters    Chapter[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

model Chapter {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  videoUrl    String? @db.Text
  position    Int
  isFree      Boolean @default(true)
  isPublished Boolean @default(false)

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}